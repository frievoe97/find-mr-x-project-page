{"remainingRequest":"/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/@vuepress/theme-default/components/AlgoliaSearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/@vuepress/theme-default/components/AlgoliaSearchBox.vue","mtime":1676678721252},{"path":"/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/cache-loader/dist/cjs.js","mtime":1676678721471},{"path":"/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/babel-loader/lib/index.js","mtime":1676678721398},{"path":"/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/cache-loader/dist/cjs.js","mtime":1676678721471},{"path":"/Users/friedrichvoelkers/GIT/find-mr-x-project-page/docs/node_modules/vue-loader/lib/index.js","mtime":1676678724466}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQWxnb2xpYVNlYXJjaEJveCcsCiAgcHJvcHM6IFsnb3B0aW9ucyddLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwbGFjZWhvbGRlcjogdW5kZWZpbmVkCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgICRsYW5nKG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMudXBkYXRlKHRoaXMub3B0aW9ucywgbmV3VmFsdWUpOwogICAgfSwKICAgIG9wdGlvbnMobmV3VmFsdWUpIHsKICAgICAgdGhpcy51cGRhdGUobmV3VmFsdWUsIHRoaXMuJGxhbmcpOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdGlhbGl6ZSh0aGlzLm9wdGlvbnMsIHRoaXMuJGxhbmcpOwogICAgdGhpcy5wbGFjZWhvbGRlciA9IHRoaXMuJHNpdGUudGhlbWVDb25maWcuc2VhcmNoUGxhY2Vob2xkZXIgfHwgJyc7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0aWFsaXplKHVzZXJPcHRpb25zLCBsYW5nKSB7CiAgICAgIFByb21pc2UuYWxsKFtpbXBvcnQoIC8qIHdlYnBhY2tDaHVua05hbWU6ICJkb2NzZWFyY2giICovJ2RvY3NlYXJjaC5qcy9kaXN0L2Nkbi9kb2NzZWFyY2gubWluLmpzJyksIGltcG9ydCggLyogd2VicGFja0NodW5rTmFtZTogImRvY3NlYXJjaCIgKi8nZG9jc2VhcmNoLmpzL2Rpc3QvY2RuL2RvY3NlYXJjaC5taW4uY3NzJyldKS50aGVuKChbZG9jc2VhcmNoXSkgPT4gewogICAgICAgIGRvY3NlYXJjaCA9IGRvY3NlYXJjaC5kZWZhdWx0OwogICAgICAgIGNvbnN0IHsKICAgICAgICAgIGFsZ29saWFPcHRpb25zID0ge30KICAgICAgICB9ID0gdXNlck9wdGlvbnM7CiAgICAgICAgZG9jc2VhcmNoKE9iamVjdC5hc3NpZ24oe30sIHVzZXJPcHRpb25zLCB7CiAgICAgICAgICBpbnB1dFNlbGVjdG9yOiAnI2FsZ29saWEtc2VhcmNoLWlucHV0JywKICAgICAgICAgIC8vICM2OTcgTWFrZSBkb2NzZWFyY2ggd29yayB3ZWxsIGF0IGkxOG4gbW9kZS4KICAgICAgICAgIGFsZ29saWFPcHRpb25zOiB7CiAgICAgICAgICAgIC4uLmFsZ29saWFPcHRpb25zLAogICAgICAgICAgICBmYWNldEZpbHRlcnM6IFtgbGFuZzoke2xhbmd9YF0uY29uY2F0KGFsZ29saWFPcHRpb25zLmZhY2V0RmlsdGVycyB8fCBbXSkKICAgICAgICAgIH0sCiAgICAgICAgICBoYW5kbGVTZWxlY3RlZDogKGlucHV0LCBldmVudCwgc3VnZ2VzdGlvbikgPT4gewogICAgICAgICAgICBjb25zdCB7CiAgICAgICAgICAgICAgcGF0aG5hbWUsCiAgICAgICAgICAgICAgaGFzaAogICAgICAgICAgICB9ID0gbmV3IFVSTChzdWdnZXN0aW9uLnVybCk7CiAgICAgICAgICAgIGNvbnN0IHJvdXRlcGF0aCA9IHBhdGhuYW1lLnJlcGxhY2UodGhpcy4kc2l0ZS5iYXNlLCAnLycpOwogICAgICAgICAgICBjb25zdCBfaGFzaCA9IGRlY29kZVVSSUNvbXBvbmVudChoYXNoKTsKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goYCR7cm91dGVwYXRofSR7X2hhc2h9YCk7CiAgICAgICAgICB9CiAgICAgICAgfSkpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGUob3B0aW9ucywgbGFuZykgewogICAgICB0aGlzLiRlbC5pbm5lckhUTUwgPSAnPGlucHV0IGlkPSJhbGdvbGlhLXNlYXJjaC1pbnB1dCIgY2xhc3M9InNlYXJjaC1xdWVyeSI+JzsKICAgICAgdGhpcy5pbml0aWFsaXplKG9wdGlvbnMsIGxhbmcpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";AAeA;EACAA;EAEAC;EAEAC;IACA;MACAC;IACA;EACA;EAEAC;IACAC;MACA;IACA;IAEAC;MACA;IACA;EACA;EAEAC;IACA;IACA;EACA;EAEAC;IACAC;MACAC,aACA,sFACA,sFACA;QACAC;QACA;UAAAC;QAAA;QACAD,wBACA,IACAE,aACA;UACAC;UACA;UACAF;YACA;YACAG;UACA;UACAC;YACA;cAAAC;cAAAC;YAAA;YACA;YACA;YACA;UACA;QACA,EACA;MACA;IACA;IAEAC;MACA;MACA;IACA;EACA;AACA","names":["name","props","data","placeholder","watch","$lang","options","mounted","methods","initialize","Promise","docsearch","algoliaOptions","userOptions","inputSelector","facetFilters","handleSelected","pathname","hash","update"],"sourceRoot":"node_modules/@vuepress/theme-default/components","sources":["AlgoliaSearchBox.vue"],"sourcesContent":["<template>\n  <form\n    id=\"search-form\"\n    class=\"algolia-search-wrapper search-box\"\n    role=\"search\"\n  >\n    <input\n      id=\"algolia-search-input\"\n      class=\"search-query\"\n      :placeholder=\"placeholder\"\n    >\n  </form>\n</template>\n\n<script>\nexport default {\n  name: 'AlgoliaSearchBox',\n\n  props: ['options'],\n\n  data () {\n    return {\n      placeholder: undefined\n    }\n  },\n\n  watch: {\n    $lang (newValue) {\n      this.update(this.options, newValue)\n    },\n\n    options (newValue) {\n      this.update(newValue, this.$lang)\n    }\n  },\n\n  mounted () {\n    this.initialize(this.options, this.$lang)\n    this.placeholder = this.$site.themeConfig.searchPlaceholder || ''\n  },\n\n  methods: {\n    initialize (userOptions, lang) {\n      Promise.all([\n        import(/* webpackChunkName: \"docsearch\" */ 'docsearch.js/dist/cdn/docsearch.min.js'),\n        import(/* webpackChunkName: \"docsearch\" */ 'docsearch.js/dist/cdn/docsearch.min.css')\n      ]).then(([docsearch]) => {\n        docsearch = docsearch.default\n        const { algoliaOptions = {}} = userOptions\n        docsearch(Object.assign(\n          {},\n          userOptions,\n          {\n            inputSelector: '#algolia-search-input',\n            // #697 Make docsearch work well at i18n mode.\n            algoliaOptions: {\n              ...algoliaOptions,\n              facetFilters: [`lang:${lang}`].concat(algoliaOptions.facetFilters || [])\n            },\n            handleSelected: (input, event, suggestion) => {\n              const { pathname, hash } = new URL(suggestion.url)\n              const routepath = pathname.replace(this.$site.base, '/')\n              const _hash = decodeURIComponent(hash)\n              this.$router.push(`${routepath}${_hash}`)\n            }\n          }\n        ))\n      })\n    },\n\n    update (options, lang) {\n      this.$el.innerHTML = '<input id=\"algolia-search-input\" class=\"search-query\">'\n      this.initialize(options, lang)\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.algolia-search-wrapper\n  & > span\n    vertical-align middle\n  .algolia-autocomplete\n    line-height normal\n    .ds-dropdown-menu\n      background-color #fff\n      border 1px solid #999\n      border-radius 4px\n      font-size 16px\n      margin 6px 0 0\n      padding 4px\n      text-align left\n      &:before\n        border-color #999\n      [class*=ds-dataset-]\n        border none\n        padding 0\n      .ds-suggestions\n        margin-top 0\n      .ds-suggestion\n        border-bottom 1px solid $borderColor\n    .algolia-docsearch-suggestion--highlight\n      color #2c815b\n    .algolia-docsearch-suggestion\n      border-color $borderColor\n      padding 0\n      .algolia-docsearch-suggestion--category-header\n        padding 5px 10px\n        margin-top 0\n        background $accentColor\n        color #fff\n        font-weight 600\n        .algolia-docsearch-suggestion--highlight\n          background rgba(255, 255, 255, 0.6)\n      .algolia-docsearch-suggestion--wrapper\n        padding 0\n      .algolia-docsearch-suggestion--title\n        font-weight 600\n        margin-bottom 0\n        color $textColor\n      .algolia-docsearch-suggestion--subcategory-column\n        vertical-align top\n        padding 5px 7px 5px 5px\n        border-color $borderColor\n        background #f1f3f5\n        &:after\n          display none\n      .algolia-docsearch-suggestion--subcategory-column-text\n        color #555\n    .algolia-docsearch-footer\n      border-color $borderColor\n    .ds-cursor .algolia-docsearch-suggestion--content\n      background-color #e7edf3 !important\n      color $textColor\n\n@media (min-width: $MQMobile)\n  .algolia-search-wrapper\n    .algolia-autocomplete\n      .algolia-docsearch-suggestion\n        .algolia-docsearch-suggestion--subcategory-column\n          float none\n          width 150px\n          min-width 150px\n          display table-cell\n        .algolia-docsearch-suggestion--content\n          float none\n          display table-cell\n          width 100%\n          vertical-align top\n        .ds-dropdown-menu\n          min-width 515px !important\n\n@media (max-width: $MQMobile)\n  .algolia-search-wrapper\n    .ds-dropdown-menu\n      min-width calc(100vw - 4rem) !important\n      max-width calc(100vw - 4rem) !important\n    .algolia-docsearch-suggestion--wrapper\n      padding 5px 7px 5px 5px !important\n    .algolia-docsearch-suggestion--subcategory-column\n      padding 0 !important\n      background white !important\n    .algolia-docsearch-suggestion--subcategory-column-text:after\n      content \" > \"\n      font-size 10px\n      line-height 14.4px\n      display inline-block\n      width 5px\n      margin -3px 3px 0\n      vertical-align middle\n\n</style>\n"]}]}